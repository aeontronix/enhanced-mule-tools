# Overview

The anypoint maven plugin is primarily designed to provide support for supporting [automated API management](../api-management-automation.html) when deploying an 
application, but also includes a few extra capabilities in addition to that those.

# Full usage and technical documentation

For the full usage and technical documentation, See [Plugin Documentation](plugin-info.html)

# Deploying applications from source with automated API management setup

The most common usage for the anypoint tools is to deploy an application, [automatically configuring Anypoint API Manager](../api-management-automation.html)
in the process.

In order to do so you will need to add an anypoint.json or anypoint.yml to your project and do the followings changes to your pom.xml file:

1) Add the anypoint plugin

```xml
<project>
    <build>
        <plugins>
            <plugin>
                <groupId>com.aeontronix.enhanced-mule</groupId>
                <version>${project.version}</version>
                <artifactId>enhanced-mule-tools-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            ...
        <plugins>
        ...
    </build>
    ...
</project>
```

2) If you want your anypoint.json/yml file to be in the root folder of the project (rather than under src/main/mule), add the following

```xml
<project>
    <build>
        <resources>
            <resource>
                <directory>\${project.basedir}</directory>
                <includes>
                    <include>anypoint.json</include>
                    <include>anypoint.yml</include>
                    <include>anypoint.yaml</include>
                </includes>
            </resource>
            ...
        </resources>
        ...
    </build>
    ...
</project>
```

3) Unless you wish to actually deploy the application jar file in a maven repository in addition to deploying the application
to Cloudhub or an onprem runtime, you will need to set the 'maven.deploy.skip' variable to true.

```xml
<project>
    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        ...
    </properties>
</project>
```

If you wanted to deploy to an on-prem server, you just need to specify the target configuration. ie:

```xml
<configuration>
    <username>${anypoint.username}</username>
    <password>${anypoint.password}</password>
    <org>${anypoint.org}</org>
    <env>${anypoint.env}</env>
    <target>[target server or server group]</target>
</configuration>
```

In the configuration you also will be able to setup [variables](../api-management-automation.html#variables) to customize the anypoint provisioning automation.

```xml
<configuration>
    <username>${anypoint.username}</username>
    <password>${anypoint.password}</password>
    <org>${anypoint.org}</org>
    <env>${anypoint.env}</env>
    <target>[target server or server group]</target>
</configuration>
```
